{
  "title": "Experimental Algorithm Analysis Material",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": {
    "Java": { "ext":["java"], "label":"Java", "lang":"java"},
    "Java_Generic": { "ext":["java"], "label":"Java (Generic)","lang":"java"},
    "Processing": { "ext":["pde"], "label":"Processing","lang":"java"},
    "C++":{ "ext": ["cpp", "h"],"label":"C++","lang":"C++"}
  },
  "lang": "en",
  "module_origin": "http://algoviz.org",
  "exercise_server": "https://opendsa.cs.vt.edu/",
  "logging_server": "https://opendsa.cs.vt.edu/",
  "score_server": "https://opendsa.cs.vt.edu/",
  "build_JSAV": false,
  "allow_anonymous_credit": true,
  "suppress_todo": false,
  "glob_exer_options": {
    "JXOP-debug": "true"
  },
  "chapters": {
    "Lower Bounds": {
      "Development/BoundLower": {
        "long_name": "Introduction to Lower Bounds",
        "exercises": {}
      },
      "Development/BoundSearch": {
        "long_name": "Lower Bounds on Search",
        "exercises": {}
      },
      "Development/BoundMax": {
        "long_name": "Lower Bounds on Search",
        "exercises": {}
      },
      "Development/BoundAdversary": {
        "long_name": "Adversary Lower Bounds",
        "exercises": {}
      },
      "Development/BoundState": {
        "long_name": "State Space Lower Bounds",
        "exercises": {}
      },
      "Development/BoundiBest": {
        "long_name": "Finding ith Best Element",
        "exercises": {}
      },
      "Development/SortingOptimal": {
        "long_name": "Optimal Sorting",
        "exercises": {}
      }
    },
    "Advanced Analysis": {
      "AlgAnalTest/AdvSumm": {
        "long_name": "Summation Techniques",
		"sections": {
		  "SummationOneToN": {
            "long_name": "Summation of the first N integers Visualization",
            "showhide": "hide"
          }
        },
        "exercises": {
		  "SummationOneToNCON": {
            "long_name": "Summation One To N Slideshow",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          }
		}
      },
      "AlgAnalTest/Recurrence": {
        "long_name": "Solving Recurrence Relations",
		"sections": {
		  "DivideAndConquerRecurrences": {
            "long_name": "Divide And Conquer Guessing Visualization",
            "showhide": "hide"
          }
		},
        "exercises": {
		  "DivideAndConquerRecurrencesCON": {
            "long_name": "Divide And Conquer Guessing Visualization",
            "required": false,
            "points": 0.0,
            "threshold": 1.0
          }
		}
      },
      "Development/AmortAnal": {
        "long_name": "Amortized Analysis",
        "exercises": {}
      }
    }
  }
}
